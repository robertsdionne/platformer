<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_Head</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Instance Variables
spring_x = phy_com_x;
spring_length = phy_com_y - HAND_Y;
MIN_ROPE_LENGTH = spring_length;
MAX_ROPE_LENGTH = spring_length;
next_beer = 0;

// Setup
var head, skirt;
head = self;
body = instance_create(phy_position_x, phy_com_y + sprite_get_height(sprite_Head) / 2 - 4, Body);
skirt = instance_create(phy_position_x, phy_com_y + sprite_get_height(sprite_Head) / 2 + sprite_get_height(sprite_Body) - 8, Skirt);
physics_joint_revolute_create(
    head, body, phy_com_x, phy_com_y + sprite_get_height(sprite_Head) / 2,
    -HEAD_ANGLE_LIMIT, HEAD_ANGLE_LIMIT, true, 0, 0, false, false);
physics_joint_revolute_create(
    body, skirt, phy_com_x, phy_com_y + + sprite_get_height(sprite_Head) / 2 + sprite_get_height(sprite_Body) - 8,
    -HEAD_ANGLE_LIMIT, HEAD_ANGLE_LIMIT, true, 0, 0, false, false);
create_beers(self, phy_position_x, phy_position_y, phy_com_x, phy_com_y, body);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var length, nx, ny, ds;
length = magnitude(phy_com_x - spring_x, phy_com_y - HAND_Y);
nx = (phy_com_x - spring_x) / length;
ny = (phy_com_y - HAND_Y) / length;
ds = min(spring_length - length, 0);
physics_apply_force(
    phy_com_x, phy_com_y,
    HEAD_SPRING_CONSTANT * ds * nx,
    HEAD_SPRING_CONSTANT * ds * ny);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Table">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Collide
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Bird">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (next_beer &lt; BEER_COUNT) {
  physics_joint_delete(beer_joint[next_beer]);
  beer[next_beer].released = true;
  next_beer += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spring_x += HEAD_SPRING_STEP_X;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spring_x -= HEAD_SPRING_STEP_X;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var path, ratio;
path = path_add();
ratio = spring_length / magnitude(phy_com_x - spring_x, phy_com_y - HAND_Y);
path_set_kind(path, 1);
path_set_closed(path, false);
path_add_point(path, spring_x, HAND_Y, 0);
path_add_point(path, spring_x + (phy_com_x - spring_x) / 4, ratio * (phy_com_y - HAND_Y) / 2 + HAND_Y, 0);
path_add_point(path, phy_com_x, phy_com_y, 0);
//draw_line(spring_x, 0, phy_com_x, phy_com_y);
draw_path(path, 0, 0, true);
draw_sprite(sprite_Hand, 0, spring_x - sprite_get_width(sprite_Hand) + 80, -64);
draw_self();
path_delete(path);
background_y[1] -= 8;
background_y[2] += 8;
background_x[5] = -view_xview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>physics_apply_impulse(phy_com_x, phy_com_y, 0, -2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (next_beer &lt; BEER_COUNT) {
  physics_joint_delete(beer_joint[next_beer]);
  beer[next_beer].released = true;
  next_beer += 1;
} else {
  next_beer = 0;
  create_beers(self, phy_position_x, phy_position_y, phy_com_x, phy_com_y, body);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.999000012874603</PhysicsObjectAngularDamping>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
